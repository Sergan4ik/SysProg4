const - Keyword
base - Identifier
= - Operator
prompt - Identifier
( - elimiters
'Enter a base: ' - String
) - elimiters
; - elimiters
const - Keyword
power - Identifier
= - Operator
prompt - Identifier
( - elimiters
'Enter a power: ' - String
) - elimiters
; - elimiters
let - Keyword
curPower - Identifier
= - Operator
1 - Number
let - Keyword
res - Identifier
= - Operator
1 - Number
if - Keyword
( - elimiters
power - Identifier
== - Operator
0 - Number
{ - elimiters
console - Identifier
. - elimiters
log - Identifier
( - elimiters
res - Identifier
) - elimiters
; - elimiters
} - elimiters
else - Keyword
{ - elimiters
res - Identifier
= - Operator
base - Identifier
; - elimiters
while - Keyword
( - elimiters
curPower - Identifier
< - Operator
power - Identifier
) - elimiters
{ - elimiters
if - Keyword
( - elimiters
curPower - Identifier
* - Operator
2 - Number
<= - Operator
power - Identifier
) - elimiters
{ - elimiters
curPower - Identifier
*= - Operator
2 - Number
res - Identifier
*= - Operator
res - Identifier
; - elimiters
} - elimiters
else - Keyword
{ - elimiters
curPower - Identifier
++ - Operator
; - elimiters
res - Identifier
*= - Operator
base - Identifier
; - elimiters
} - elimiters
} - elimiters
console - Identifier
. - elimiters
log - Identifier
( - elimiters
res - Identifier
) - elimiters
; - elimiters
} - elimiters
